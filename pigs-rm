#!/bin/dash

# File that deletes files in the index or both the index and working directory

for file in "$@"
do
    # If the force and commit arguments are passed, then the 
    # specified files should be forcefully removed from the index
    if [ "$1" = "--force" ] && [ "$2" = "--cached" ]
    then
        if [ "$file" = "--force" ] || [ "$file" = "--cached" ]
        then
            continue

        fi

        if [ -f ".pig/.index/$file" ]
        then
            rm ".pig/.index/$file"
        
        else
            echo "pigs-rm: error: '$file' is not in the pigs repository"
            exit 1

        fi

    # if the cacheed argument is passed, then the specified files will
    # be removed from the index
    elif [ "$1" = "--cached" ]
    then
        if [ "$file" = "--cached" ] 
        then
            continue

        fi
       
        commit_num=$(head -n1 .pig/log.txt | cut -d" " -f1)
      
        if [ -f ".pig/.index/$file" ]
        then
            if (! cmp -s ".pig/.index/$file" "$file") &&
               (! cmp -s ".pig/.index/$file" ".pig/.commit$commit_num/$file")
            then
                echo "pigs-rm: error: '$file' in index is different to both the working file and the repository"
                exit 1
            
            fi
            
            rm ".pig/.index/$file"
           
        else
            echo "pigs-rm: error: '$file' is not in the pigs repository"
            exit 1

        fi
    
    # If just force argument is passed, then the specified files will be
    # forcefully removed from both the index and working directory
    elif [ "$1" = "--force" ]
    then
        if [ "$file" = "--force" ] 
        then
            continue

        fi

        if [ -f "$file" ]
        then
            if [ -f ".pig/.index/$file" ]
            then
                rm ".pig/.index/$file"
                   
            else
                echo "pigs-rm: error: '$file' is not in the pigs repository"
                exit 1

            fi

        else
            echo "pigs-rm: error: '$file' is not in the pigs repository"
            exit 1

        fi
        
        rm "$file"

    # In this case, the specified files willm be removed from the index and working
    # directory, in the case that no errors   
    else
        for file_name in "$@"
        do  
            if [ ! -f "$file_name" ]
            then
                echo "pigs-rm: error: '$file_name' is not in the pigs repository"
                exit 1

            fi
        done
    
        if [ -f ".pig/log.txt" ]
        then
            commit_num=$(head -n1 .pig/log.txt | cut -d" " -f1)

            if [ ! -f ".pig/.index/$file" ] 
            then
                echo "pigs-rm: error: '$file' is not in the pigs repository"
                exit 1

            fi
            
            # Checks if the index and last commit folder are different, to see if any files have 
            # any staged changes in the index
            if [ "$(diff -q ".pig/.index" ".pig/.commit$commit_num")" = "" ]
            then
                # If both files are empty, then there is nothing to be removed, breaks out of loop
                if [ "$(find ".pig/.index" -maxdepth 0 -empty)" ] &&
                   [ "$(find ".pig/.commit$commit_num" -maxdepth 0 -empty)" ]
                then
                    break

                fi
                
                if (! cmp -s ".pig/.index/$file" ".pig/.commit$commit_num/$file")
                then
                    echo "pigs-rm: error: '$file' has staged changes in the index"
                    exit 1

                fi
            else
                
                if [ ! -f ".pig/.commit$commit_num/$file" ]
                then 
                    file_name_save=$(diff ".pig/.index" ".pig/.commit$commit_num" | grep -E "^.*$file$" | cut -d' ' -f4)
                    echo "pigs-rm: error: '$file_name_save' has staged changes in the index"
                    exit 1
                    
                else
                    if (! cmp -s ".pig/.commit$commit_num/$file" "$file")
                    then
                        if (! cmp -s ".pig/.index/$file" "$file") && 
                           (! cmp -s ".pig/.index/$file" ".pig/.commit$commit_num/$file")
                        then
                            echo "pigs-rm: error: '$file' in index is different to both the working file and the repository"
                            exit 1

                        elif (cmp -s ".pig/.index/$file" "$file")        
                        then
                            echo "pigs-rm: error: '$file' has staged changes in the index"
                            exit 1

                        else
                            echo "pigs-rm: error: '$file' in the repository is different to the working file"
                            exit 1

                        fi
                    fi
                fi
            fi
        fi

        if [ -f ".pig/.index/$file" ]
        then
            rm ".pig/.index/$file"

        fi

        rm "$file"

    fi  
    
done